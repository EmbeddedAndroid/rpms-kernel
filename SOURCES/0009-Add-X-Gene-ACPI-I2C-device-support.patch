From 424dbc90a489e10b2d9521e0e7f47ac984ec3012 Mon Sep 17 00:00:00 2001
From: Suravee Suthikulpanit <Suravee.Suthikulpanit@amd.com>
Date: Thu, 17 Dec 2015 09:41:57 +0700
Subject: i2c: designware: Do not require clock when SSCN and
 FFCN are provided

The current driver uses input clock source frequency to calculate
values for [SS|FS]_[HC|LC] registers. However, when booting ACPI,
we do not currently have a good way to provide the frequency
information.
Instead, we can leverage the SSCN and FFCN ACPI methods, which can be
used to directly provide these values.
So, this patch removes the clock requirement when SSCN and FFCN
are provided.

Ref: https://lkml.org/lkml/2015/12/15/792

Signed-off-by: Suravee Suthikulpanit <Suravee.Suthikulpanit@amd.com>
--Note: This has been tested on AMD Seattle RevB for both DT and ACPI.

Signed-off-by: Phong Vo <pvo@apm.com>
---
 drivers/i2c/busses/i2c-designware-core.c    |  5 +++--
 drivers/i2c/busses/i2c-designware-platdrv.c | 30 +++++++++++++++++++++++------
 2 files changed, 27 insertions(+), 8 deletions(-)

diff --git a/drivers/i2c/busses/i2c-designware-core.c b/drivers/i2c/busses/i2c-designware-core.c
index 6f19a33..9502056 100644
--- a/drivers/i2c/busses/i2c-designware-core.c
+++ b/drivers/i2c/busses/i2c-designware-core.c
@@ -281,7 +281,7 @@ static void __i2c_dw_enable(struct dw_i2c_dev *dev, bool enable)
  */
 int i2c_dw_init(struct dw_i2c_dev *dev)
 {
-	u32 input_clock_khz;
+	u32 input_clock_khz = 0;
 	u32 hcnt, lcnt;
 	u32 reg;
 	u32 sda_falling_time, scl_falling_time;
@@ -295,7 +295,8 @@ int i2c_dw_init(struct dw_i2c_dev *dev)
 		}
 	}
 
-	input_clock_khz = dev->get_clk_rate_khz(dev);
+	if (dev->get_clk_rate_khz)
+		input_clock_khz = dev->get_clk_rate_khz(dev);
 
 	reg = dw_readl(dev, DW_IC_COMP_TYPE);
 	if (reg == ___constant_swab32(DW_IC_COMP_TYPE_VALUE)) {
diff --git a/drivers/i2c/busses/i2c-designware-platdrv.c b/drivers/i2c/busses/i2c-designware-platdrv.c
index 3dd2de3..e8d5202 100644
--- a/drivers/i2c/busses/i2c-designware-platdrv.c
+++ b/drivers/i2c/busses/i2c-designware-platdrv.c
@@ -133,6 +133,26 @@ static inline int dw_i2c_acpi_configure(struct platform_device *pdev)
 static inline void dw_i2c_acpi_unconfigure(struct platform_device *pdev) { }
 #endif
 
+static int dw_i2c_configure_clk(struct platform_device *pdev,
+                               struct dw_i2c_dev *dev)
+{
+	/* For ACPI, if SSCN and FMCN is provided, we should not
+	 * need the clock value.
+	 */
+	if (has_acpi_companion(&pdev->dev) &&
+	    dev->ss_hcnt && dev->ss_lcnt &&
+	    dev->fs_hcnt && dev->fs_lcnt)
+		return 0;
+
+	dev->clk = devm_clk_get(&pdev->dev, NULL);
+	dev->get_clk_rate_khz = i2c_dw_get_clk_rate_khz;
+	if (IS_ERR(dev->clk))
+		return PTR_ERR(dev->clk);
+	clk_prepare_enable(dev->clk);
+
+	return 0;
+}
+
 static int dw_i2c_probe(struct platform_device *pdev)
 {
 	struct dw_i2c_dev *dev;
@@ -211,13 +231,11 @@ static int dw_i2c_probe(struct platform_device *pdev)
 		dev->master_cfg =  DW_IC_CON_MASTER | DW_IC_CON_SLAVE_DISABLE |
 			DW_IC_CON_RESTART_EN | DW_IC_CON_SPEED_FAST;
 
-	dev->clk = devm_clk_get(&pdev->dev, NULL);
-	dev->get_clk_rate_khz = i2c_dw_get_clk_rate_khz;
-	if (IS_ERR(dev->clk))
-		return PTR_ERR(dev->clk);
-	clk_prepare_enable(dev->clk);
+	r = dw_i2c_configure_clk(pdev, dev);
+	if (r)
+		return r;
 
-	if (!dev->sda_hold_time && ht) {
+	if (!dev->sda_hold_time && ht && dev->get_clk_rate_khz) {
 		u32 ic_clk = dev->get_clk_rate_khz(dev);
 
 		dev->sda_hold_time = div_u64((u64)ic_clk * ht + 500000,
-- 
2.6.0

From 4419801f78c9421992cdf197b680d32e19ff9a45 Mon Sep 17 00:00:00 2001
From: Loc Ho <lho@apm.com>
Date: Thu, 10 Dec 2015 14:19:16 -0700
Subject: ACPI / APD: Add APM X-Gene ACPI I2C device support

Add APM X-Gene ACPI I2C device support by hooks into existent
ACPI APD driver.  To fully enable support, require another
patch to add the X-Gene ACPI node into the DW I2C driver.

Signed-off-by: Loc Ho <lho@apm.com>
Reviewed-by: Ken Xue <Ken.Xue@amd.com>
Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit b790eb20b8e4a5c913fc62c49562c821165b4fad)
Signed-off-by: Phong Vo <pvo@apm.com>
---
 drivers/acpi/acpi_apd.c | 16 +++++++++++++++-
 1 file changed, 15 insertions(+), 1 deletion(-)

diff --git a/drivers/acpi/acpi_apd.c b/drivers/acpi/acpi_apd.c
index 3984ea9..1d682d6 100644
--- a/drivers/acpi/acpi_apd.c
+++ b/drivers/acpi/acpi_apd.c
@@ -52,7 +52,7 @@ struct apd_private_data {
 	const struct apd_device_desc *dev_desc;
 };
 
-#ifdef CONFIG_X86_AMD_PLATFORM_DEVICE
+#if defined(CONFIG_X86_AMD_PLATFORM_DEVICE) || defined(CONFIG_ARM64)
 #define APD_ADDR(desc)	((unsigned long)&desc)
 
 static int acpi_apd_setup(struct apd_private_data *pdata)
@@ -72,6 +72,7 @@ static int acpi_apd_setup(struct apd_private_data *pdata)
 	return 0;
 }
 
+#ifdef CONFIG_X86_AMD_PLATFORM_DEVICE
 static struct apd_device_desc cz_i2c_desc = {
 	.setup = acpi_apd_setup,
 	.fixed_clk_rate = 133000000,
@@ -81,6 +82,14 @@ static struct apd_device_desc cz_uart_desc = {
 	.setup = acpi_apd_setup,
 	.fixed_clk_rate = 48000000,
 };
+#endif
+
+#ifdef CONFIG_ARM64
+static struct apd_device_desc xgene_i2c_desc = {
+	.setup = acpi_apd_setup,
+	.fixed_clk_rate = 100000000,
+};
+#endif
 
 #else
 
@@ -133,9 +142,14 @@ static int acpi_apd_create_device(struct acpi_device *adev,
 
 static const struct acpi_device_id acpi_apd_device_ids[] = {
 	/* Generic apd devices */
+#ifdef CONFIG_X86_AMD_PLATFORM_DEVICE
 	{ "AMD0010", APD_ADDR(cz_i2c_desc) },
 	{ "AMD0020", APD_ADDR(cz_uart_desc) },
 	{ "AMD0030", },
+#endif
+#ifdef CONFIG_ARM64
+	{ "APMC0D0F", APD_ADDR(xgene_i2c_desc) },
+#endif
 	{ }
 };
 
-- 
2.6.0

From 3ce8dde2dbdec29db2e9f622a620952ec10d216c Mon Sep 17 00:00:00 2001
From: Loc Ho <lho@apm.com>
Date: Thu, 10 Dec 2015 14:19:17 -0700
Subject: i2c: dw: Add APM X-Gene ACPI I2C device support

Enable APM X-Gene ACPI I2C device support by adding the
corresponding ACPI ID. The platform ACPI APD corresponding
change is required to provide the proper clock frequency input.

Signed-off-by: Loc Ho <lho@apm.com>
Acked-by: Mika Westerberg <mika.westerberg@linux.intel.com>
Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit 04a407f6b129b6e35de3250c313976a3a154476e)
Signed-off-by: Phong Vo <pvo@apm.com>
---
 drivers/i2c/busses/i2c-designware-platdrv.c | 1 +
 1 file changed, 1 insertion(+)

diff --git a/drivers/i2c/busses/i2c-designware-platdrv.c b/drivers/i2c/busses/i2c-designware-platdrv.c
index e8d5202..b1e74ec 100644
--- a/drivers/i2c/busses/i2c-designware-platdrv.c
+++ b/drivers/i2c/busses/i2c-designware-platdrv.c
@@ -122,6 +122,7 @@ static const struct acpi_device_id dw_i2c_acpi_match[] = {
 	{ "80860F41", 0 },
 	{ "808622C1", 0 },
 	{ "AMD0010", 133 * 1000 * 1000 },
+	{ "APMC0D0F", 0 },
 	{ }
 };
 MODULE_DEVICE_TABLE(acpi, dw_i2c_acpi_match);
-- 
2.6.0

